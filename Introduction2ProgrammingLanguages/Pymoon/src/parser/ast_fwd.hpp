#pragma once
#include "../types.hpp"

class Identifier;
class PyModule;
class Statement;
class FunctionDefStatement;
class AsyncFunctionDefStatement;
class ClassDefStatement;
class ReturnStatement;
class DeleteStatement;
class AssignStatement;
class AugAssignStatement;
class ForStatement;
class AsyncForStatement;
class WhileStatement;
class IfStatement;
class WithStatement;
class AsyncWithStatement;
class RaiseStatement;
class TryStatement;
class AssertStatement;
class ImportStatement;
class ImportFromStatement;
class GlobalStatement;
class NonlocalStatement;
class ExprStatement;
class PassStatement;
class BreakStatement;
class ContinueStatement;
class Expression;
class BoolOpExpression;
class BinOpExpression;
class UnaryOpExpression;
class LambdaExpression;
class IfExpression;
class DictExpression;
class SetExpression;
class ListCompExpression;
class SetCompExpression;
class DictCompExpression;
class GeneratorExpression;
class AwaitExpression;
class YieldExpression;
class YieldFromExpression;
class CompareExpression;
class CallExpression;
class NumExpression;
class StrExpression;
class NameConstantExpression;
class EllipsisExpression;
class AttributeExpression;
class SubscriptExpression;
class StarredExpression;
class NameExpression;
class ListExpression;
class TupleExpression;
class Slice;
class ExtSlice;
class IndexSlice;
class Comprehension;
class ExceptHandler;
class Arguments;
class Arg;
class Keyword;
class Alias;
class WithItem;
class Decorator;
